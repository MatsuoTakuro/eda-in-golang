ARG service
FROM golang:1.24-alpine AS builder
ARG service

WORKDIR /mallbots

RUN go install github.com/go-delve/delve/cmd/dlv@latest

# Retrieve application dependencies.
# This allows the container build to reuse cached dependencies.
# Expecting to copy go.mod and if present go.sum.
COPY go.* ./
RUN go mod download

# Copy local code to the container image.
COPY .. ./

# Build the binary.
RUN go build -gcflags="all=-N -l" -o service \
    ./modules/${service}/cmd/service

FROM alpine:3 AS runtime

RUN apk add --no-cache libc6-compat
COPY --from=builder /go/bin/dlv /go/bin/dlv

COPY --from=builder /mallbots/docker/wait-for .
RUN chmod +x /wait-for

COPY --from=builder /mallbots/docker/entrypoint_microservices .
RUN chmod +x /entrypoint_microservices

# Copy the binary to the production image from the builder stage.
COPY --from=builder /mallbots/service /mallbots/service
