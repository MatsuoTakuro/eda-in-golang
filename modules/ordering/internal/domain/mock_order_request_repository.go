// Code generated by mockery v2.53.4. DO NOT EDIT.

package domain

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockOrderRequestRepository is an autogenerated mock type for the OrderRequestRepository type
type MockOrderRequestRepository struct {
	mock.Mock
}

// FindOrInsert provides a mock function with given fields: ctx, idemKey, request, command
func (_m *MockOrderRequestRepository) FindOrInsert(ctx context.Context, idemKey string, request OrderRequest, command interface{}) (string, bool, error) {
	ret := _m.Called(ctx, idemKey, request, command)

	if len(ret) == 0 {
		panic("no return value specified for FindOrInsert")
	}

	var r0 string
	var r1 bool
	var r2 error
	if rf, ok := ret.Get(0).(func(context.Context, string, OrderRequest, interface{}) (string, bool, error)); ok {
		return rf(ctx, idemKey, request, command)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, OrderRequest, interface{}) string); ok {
		r0 = rf(ctx, idemKey, request, command)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, OrderRequest, interface{}) bool); ok {
		r1 = rf(ctx, idemKey, request, command)
	} else {
		r1 = ret.Get(1).(bool)
	}

	if rf, ok := ret.Get(2).(func(context.Context, string, OrderRequest, interface{}) error); ok {
		r2 = rf(ctx, idemKey, request, command)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// NewMockOrderRequestRepository creates a new instance of MockOrderRequestRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockOrderRequestRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockOrderRequestRepository {
	mock := &MockOrderRequestRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
