services:
  monolith:
    container_name: monolith
    hostname: monolith
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - '8080:8080'
      - '8085:8085'
      - '40000:40000'
    env_file:
      - docker/.env
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
    command: ["./wait-for", "postgres:5432", "--", "/entrypoint"]
  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:12-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: itsasecret
    ports:
      - '5432:5432'
    volumes:
      - 'pgdata:/var/lib/postgresql/data'
      - './docker/database:/docker-entrypoint-initdb.d'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
  nats:
    container_name: nats
    hostname: nats
    image: nats:2-alpine
    ports:
      - '4222:4222'
    command:
      - -js
      - -sd
      - /var/lib/nats/data
    volumes:
      - 'jsdata:/var/lib/nats/data'
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "4222"]
      interval: 5s
      timeout: 3s
      retries: 5
  nats-box:
    image: natsio/nats-box
    container_name: nats-box
    depends_on:
      nats:
        condition: service_healthy
    entrypoint: /bin/sh
    tty: true
    env_file:
      - docker/.env
  pact-broker:
    image: pactfoundation/pact-broker
    container_name: pact-broker
    hostname: pact-broker
    ports:
      - "9292:9292"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PACT_BROKER_DATABASE_URL: postgres://pactuser:pactpass@postgres:5432/pactdb


volumes:
  pgdata:
  jsdata:
